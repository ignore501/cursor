"""
–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏.
"""
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from typing import List, Dict, Optional
import logging

logger = logging.getLogger(__name__)

class KeyboardManager:
    @staticmethod
    def get_main_menu() -> ReplyKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        keyboard = [
            ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üìù –ü–ª–∞–Ω"],
            ["üó≥ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ", "üèÜ –°–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è"],
            ["‚ùì –ü–æ–º–æ—â—å"]
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_help_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–º–æ—â–∏"""
        keyboard = [
            [
                InlineKeyboardButton("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", callback_data="help_docs"),
                InlineKeyboardButton("‚ùì FAQ", callback_data="help_faq")
            ],
            [
                InlineKeyboardButton("üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="help_support"),
                InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="help_back")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_stats_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        keyboard = [
            [
                InlineKeyboardButton("üìà –ü—Ä–æ–≥—Ä–µ—Å—Å", callback_data="stats_progress"),
                InlineKeyboardButton("üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", callback_data="stats_achievements")
            ],
            [
                InlineKeyboardButton("üìä –†–µ–π—Ç–∏–Ω–≥", callback_data="stats_rating"),
                InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="stats_back")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_plan_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–ª–∞–Ω–∞ –æ–±—É—á–µ–Ω–∏—è"""
        keyboard = [
            [
                InlineKeyboardButton("üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", callback_data="plan_materials"),
                InlineKeyboardButton("üìù –ó–∞–¥–∞–Ω–∏—è", callback_data="plan_tasks")
            ],
            [
                InlineKeyboardButton("üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="plan_schedule"),
                InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="plan_back")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_vote_keyboard(topics: List[Dict]) -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è"""
        keyboard = []
        keyboard.extend(
            [
                InlineKeyboardButton(
                    f"{topic['topic']} ({topic['votes']})",
                    callback_data=f"vote_{topic['id']}",
                )
            ]
            for topic in topics
        )
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_learning_menu() -> ReplyKeyboardMarkup:
        """–ú–µ–Ω—é –æ–±—É—á–µ–Ω–∏—è"""
        keyboard = [
            ["üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å"],
            ["üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", "üîô –ù–∞–∑–∞–¥"]
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    @staticmethod
    def get_confirmation_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"""
        keyboard = [
            [
                InlineKeyboardButton("‚úÖ –î–∞", callback_data="confirm_yes"),
                InlineKeyboardButton("‚ùå –ù–µ—Ç", callback_data="confirm_no")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def get_competition_keyboard(competitions: List[Dict]) -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è"""
        keyboard = []
        for comp in competitions:
            status = "‚úÖ" if comp['status'] == 'active' else "‚ùå"
            keyboard.append([
                InlineKeyboardButton(
                    f"{status} {comp['title']}",
                    callback_data=f"comp_{comp['competition_id']}"
                )
            ])
        return InlineKeyboardMarkup(keyboard)

    @staticmethod
    def create_competition_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è–º–∏"""
        keyboard = [
            [
                InlineKeyboardButton("–°–ø–∏—Å–æ–∫ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–π", callback_data="competition_list"),
                InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ", callback_data="competition_create")
            ],
            [
                InlineKeyboardButton("–ú–æ–∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è", callback_data="competition_my"),
                InlineKeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="competition_stats")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def create_topic_keyboard(topic_id: int) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞ —Ç–µ–º—É"""
        keyboard = [
            [
                InlineKeyboardButton("üëç", callback_data=f"vote_up_{topic_id}"),
                InlineKeyboardButton("üëé", callback_data=f"vote_down_{topic_id}")
            ],
            [
                InlineKeyboardButton("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏", callback_data=f"topic_comments_{topic_id}"),
                InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data="close")
            ]
        ]
        return InlineKeyboardMarkup(keyboard)
    
    @staticmethod
    def create_learning_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—É—á–µ–Ω–∏–µ–º"""
        keyboard = [
            [
                InlineKeyboardButton("–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ", callback_data="learn_start"),
                InlineKeyboardButton("–ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å", callback_data="learn_progress")
            ],
            [
                InlineKeyboardButton("–ú–∞—Ç–µ—Ä–∏–∞–ª—ã", callback_data="learn_materials"),
                InlineKeyboardButton("–¢–µ—Å—Ç—ã", callback_data="learn_tests")
            ]
        ]
        return InlineKeyboardMarkup(keyboard) 