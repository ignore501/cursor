"""
–¢–µ—Å—Ç—ã –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä.
"""
import pytest
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from src.ui.keyboards.keyboard_manager import KeyboardManager

def test_get_main_menu():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    keyboard = KeyboardManager.get_main_menu()
    
    assert isinstance(keyboard, ReplyKeyboardMarkup)
    assert len(keyboard.keyboard) == 2
    assert len(keyboard.keyboard[0]) == 2
    assert len(keyboard.keyboard[1]) == 2
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    assert [btn.text for btn in keyboard.keyboard[0]] == ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üìù –ü–ª–∞–Ω"]
    assert [btn.text for btn in keyboard.keyboard[1]] == ["üó≥ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ", "‚ùì –ü–æ–º–æ—â—å"]

def test_get_vote_keyboard():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è."""
    topics = [
        {"id": 1, "topic": "Topic 1", "votes": 5},
        {"id": 2, "topic": "Topic 2", "votes": 3}
    ]
    keyboard = KeyboardManager.get_vote_keyboard(topics)
    
    assert isinstance(keyboard, InlineKeyboardMarkup)
    assert len(keyboard.inline_keyboard) == len(topics)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
    assert all(
        len(row) == 1 and 
        isinstance(row[0], InlineKeyboardButton) and
        row[0].text == f"{topic['topic']} ({topic['votes']})" and
        row[0].callback_data == f"vote_{topic['id']}"
        for row, topic in zip(keyboard.inline_keyboard, topics)
    )

def test_get_learning_menu():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ–Ω—é –æ–±—É—á–µ–Ω–∏—è."""
    keyboard = KeyboardManager.get_learning_menu()
    
    assert isinstance(keyboard, ReplyKeyboardMarkup)
    assert len(keyboard.keyboard) == 2
    assert len(keyboard.keyboard[0]) == 2
    assert len(keyboard.keyboard[1]) == 2
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    assert [btn.text for btn in keyboard.keyboard[0]] == ["üìö –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", "üìà –ü—Ä–æ–≥—Ä–µ—Å—Å"]
    assert [btn.text for btn in keyboard.keyboard[1]] == ["üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è", "üîô –ù–∞–∑–∞–¥"]

def test_get_confirmation_keyboard():
    """–¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è."""
    keyboard = KeyboardManager.get_confirmation_keyboard()
    
    assert isinstance(keyboard, InlineKeyboardMarkup)
    assert len(keyboard.inline_keyboard) == 1
    assert len(keyboard.inline_keyboard[0]) == 2
    
    buttons = keyboard.inline_keyboard[0]
    assert buttons[0].text == "‚úÖ –î–∞"
    assert buttons[0].callback_data == "confirm_yes"
    assert buttons[1].text == "‚ùå –ù–µ—Ç"
    assert buttons[1].callback_data == "confirm_no" 