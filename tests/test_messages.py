"""
–¢–µ—Å—Ç—ã –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π.
"""
import pytest
from src.ui.messages.message_manager import MessageManager

@pytest.fixture
def message_manager():
    """–§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π."""
    return MessageManager()

def test_welcome_message(message_manager):
    """–¢–µ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
    message = message_manager.get_welcome_message("test_user")
    
    assert isinstance(message, str)
    assert "test_user" in message
    assert "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å" in message
    assert "üëã" in message

def test_help_message(message_manager):
    """–¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–º–æ—â–∏."""
    message = message_manager.get_help_message()
    
    assert isinstance(message, str)
    assert "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã" in message
    assert "/start" in message
    assert "/help" in message

def test_error_message(message_manager):
    """–¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ."""
    message = message_manager.get_error_message()
    
    assert isinstance(message, str)
    assert "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞" in message

def test_topic_message(message_manager):
    """–¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ç–µ–º–µ."""
    topic = {
        "title": "Test Topic",
        "description": "Test Description",
        "created_at": "2024-03-15"
    }
    message = message_manager.get_topic_message(topic)
    
    assert isinstance(message, str)
    assert topic["title"] in message
    assert topic["description"] in message

def test_vote_message(message_manager):
    """–¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏."""
    topics = [
        {'id': 1, 'topic': 'Test Topic', 'votes': 5},
        {'id': 2, 'topic': 'Another Topic', 'votes': 2}
    ]
    message = message_manager.get_vote_message(topics)
    
    assert isinstance(message, str)
    assert "Test Topic" in message
    assert "5" in message
    assert "2" in message

def test_success_message(message_manager):
    """–¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ."""
    message = message_manager.get_learning_success_message("Test action")
    
    assert isinstance(message, str)
    assert "Test action" in message
    assert "‚úÖ" in message 